{"version":3,"file":"static/js/857.3003edaf.chunk.js","mappings":"wUASaA,EAAO,WACnB,OAAuBC,EAAAA,EAAAA,IAAiB,SAACC,GAAD,OAAWA,EAAMC,QAAjDA,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACRC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAiB,GAA3C,eAAOC,EAAP,KAAcC,EAAd,KAaA,OALAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,GAAMC,EAAAA,EAAAA,GAAUT,EAAMC,IAPR,SAACO,GACrB,IACME,EADKF,EAAIG,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,EAAGC,QAAQ,GACnCC,QAAQ,GACzBT,GAAUI,GAKVM,CAAaR,GACbN,GAASe,EAAAA,EAAAA,cAAaT,EAAIU,WACxB,CAAClB,EAAMC,EAAMC,KAEf,UAACiB,EAAA,EAAD,YACC,SAACC,EAAA,EAAD,WACC,SAACC,EAAA,EAAD,UACGrB,EAECA,EAAKsB,KAAI,SAACC,GACV,OAAO,SAAC,EAAAC,SAAD,CAAwBxB,KAAMuB,GAAfA,EAAKE,OAF3B,qBAML,SAACL,EAAA,EAAD,WACC,UAACC,EAAA,EAAD,WACE,KACD,gBAAIK,UAAU,cAAd,oBAAoCrB,c,6GCnCnCsB,EAAuBC,EAAAA,YAAiB,WAS3CC,GAAQ,IARTC,EAQS,EARTA,SACAC,EAOS,EAPTA,QACAC,EAMS,EANTA,UACAC,EAKS,EALTA,KAKS,IAHTC,GAAIC,OAGK,MAHO,MAGP,EAFTT,EAES,EAFTA,UACGU,GACM,YACTN,GAAWO,EAAAA,EAAAA,IAAmBP,EAAU,WACxC,IAAMQ,EAAkB,GAAH,OAAMR,EAAN,YAAkBE,GACvC,OAAoBO,EAAAA,EAAAA,KAAKJ,GAAD,QAAC,QACvBN,IAAKA,GACFO,GAFmB,IAGtBV,UAAWc,GAAAA,CAAWd,EAAWY,EAAiBL,GAAQ,GAAJ,OAAOK,EAAP,YAA0BL,GAAQF,GAAW,QAAJ,OAAYA,UAG/GJ,EAAQc,YAAc,UACtB,QCtBA,GAAgB,QAAU,0BCQbC,EAAW,WACvB,OAAqC5C,EAAAA,EAAAA,IAAiB,SAACC,GAAD,OAAWA,EAAM4C,YAA/DA,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,QACzB,GAAuB/C,EAAAA,EAAAA,IAAiB,SAACC,GAAD,OAAWA,EAAMC,QAAjDA,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACRC,GAAWC,EAAAA,EAAAA,MAOjB,OALAI,EAAAA,EAAAA,YAAU,WACT,IAAMC,GAAMC,EAAAA,EAAAA,GAAUT,EAAMC,GAC5BC,GAASe,EAAAA,EAAAA,cAAaT,EAAIU,WACxB,CAAClB,EAAMC,EAAMC,KAGf,gCACE2C,GACA,gBAAKnB,UAAWoB,EAAAA,QAAhB,UACC,SAAC,EAAD,CAASd,UAAU,SAASD,QAAQ,cAElC,MACJ,iBAAKL,UAAWoB,EAAAA,QAAhB,UACEF,GACA,iBAAKlB,UAAWoB,EAAAA,QAAhB,WACC,gBAAKC,MAAO,CAAEC,MAAO,MAAOC,SAAU,QAAtC,mBAA4D,OAE1D,MACJ,eAAIF,MAAO,CAAEG,UAAW,SAAUC,OAAQ,QAA1C,uBACA,SAAC,EAAAC,cAAD,CAAeC,KAAMV,W,UC/BlB,SAASW,IACf,IAAIC,GAAWC,EAAAA,EAAAA,MAEf,OADAC,QAAQC,IAAIH,IAEX,0BACC,mDAA2BA,EAASI","sources":["pages/Cart/Cart.tsx","../node_modules/react-bootstrap/esm/Spinner.js","webpack://project-shop/./src/pages/Products/Product.module.css?6910","pages/Products/Products.tsx","pages/404/Whoops404.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { CartItem } from '../../components';\r\nimport { useTypedSelector } from '../../redux/customHooks/useTypedSelector';\r\nimport { useDispatch } from 'react-redux';\r\nimport { productCount } from '../../redux/acshions/acshions.cart';\r\nimport { roleFiter } from '../../helpers/helpers';\r\nimport { ICartProduct } from './Cart.props';\r\n\r\nexport const Cart = (): JSX.Element => {\r\n\tconst { cart, role } = useTypedSelector((state) => state.cart);\r\n\tconst dispatch = useDispatch();\r\n\tconst [summa, setSumma] = useState<number>(0);\r\n\r\n\tconst getTotalSumm = (arr: ICartProduct[]) => {\r\n\t\tlet summ = arr.reduce((acc, it) => acc + it.price!, 0);\r\n\t\tconst num = summ.toFixed(2);\r\n\t\tsetSumma(+num);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst arr = roleFiter(cart, role);\r\n\t\tgetTotalSumm(arr);\r\n\t\tdispatch(productCount(arr.length));\r\n\t}, [cart, role, dispatch]);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t{!cart\r\n\t\t\t\t\t\t? 'cart is Empry'\r\n\t\t\t\t\t\t: cart.map((item) => {\r\n\t\t\t\t\t\t\t\treturn <CartItem key={item.id} cart={item} />;\r\n\t\t\t\t\t\t  })}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t<h2 className='text-center'>Total: {summa}</h2>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Product_spinner__eVW3G\"};","import React, { useEffect } from 'react';\r\nimport { useTypedSelector } from '../../redux/customHooks/useTypedSelector';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { ProductsItems } from '../../components';\r\nimport styles from './Product.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { productCount } from '../../redux/acshions/acshions.cart';\r\nimport { roleFiter } from '../../helpers/helpers';\r\n\r\nexport const Products = (): JSX.Element => {\r\n\tconst { products, error, loading } = useTypedSelector((state) => state.products);\r\n\tconst { cart, role } = useTypedSelector((state) => state.cart);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst arr = roleFiter(cart, role);\r\n\t\tdispatch(productCount(arr.length));\r\n\t}, [cart, role, dispatch]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<div className={styles.spinner}>\r\n\t\t\t\t\t<Spinner animation='border' variant='primary' />\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t\t<div className={styles.content}>\r\n\t\t\t\t{error ? (\r\n\t\t\t\t\t<div className={styles.spinner}>\r\n\t\t\t\t\t\t<div style={{ color: 'red', fontSize: '50px' }}>Error</div>{' '}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<h1 style={{ textAlign: 'center', margin: '20px' }}>Products</h1>\r\n\t\t\t\t<ProductsItems info={products} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useLocation } from 'react-router-dom';\r\n\r\nexport function Whoops404(): JSX.Element {\r\n\tlet location = useLocation();\r\n\tconsole.log(location);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Resource not found at {location.pathname}</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"names":["Cart","useTypedSelector","state","cart","role","dispatch","useDispatch","useState","summa","setSumma","useEffect","arr","roleFiter","num","reduce","acc","it","price","toFixed","getTotalSumm","productCount","length","Container","Row","Col","map","item","CartItem","id","className","Spinner","React","ref","bsPrefix","variant","animation","size","as","Component","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","Products","products","error","loading","styles","style","color","fontSize","textAlign","margin","ProductsItems","info","Whoops404","location","useLocation","console","log","pathname"],"sourceRoot":""}